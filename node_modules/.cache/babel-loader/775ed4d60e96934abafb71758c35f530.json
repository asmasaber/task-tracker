{"ast":null,"code":"var users = [{\n  name: \"asma\",\n  email: \"asma@mail.com\",\n  password: \"123456\"\n}];\nexport var userApi = {\n  login: login,\n  logout: logout,\n  register: register\n};\n\nfunction login(email, password) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      var user = users.find(function (user) {\n        return user.email === email && user.password === password && user;\n      });\n      console.log(user);\n      user ? resolve(user) : reject(\"incorrect Email or password \");\n    }, 1000);\n  });\n}\n\nfunction logout(username, password) {\n  localStorage.removeItem(\"user\");\n}\n\nfunction register(username, password) {}","map":{"version":3,"sources":["/home/garonz/workspace/task-tracker/src/utils/api.js"],"names":["users","name","email","password","userApi","login","logout","register","Promise","resolve","reject","setTimeout","user","find","console","log","username","localStorage","removeItem"],"mappings":"AAAA,IAAMA,KAAK,GAAG,CACZ;AACEC,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,QAAQ,EAAE;AAHZ,CADY,CAAd;AAOA,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,KAAK,EAALA,KADqB;AAErBC,EAAAA,MAAM,EAANA,MAFqB;AAGrBC,EAAAA,QAAQ,EAARA;AAHqB,CAAhB;;AAMP,SAASF,KAAT,CAAeH,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,SAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,IAAAA,UAAU,CAAC,YAAM;AACf,UAAMC,IAAI,GAAGZ,KAAK,CAACa,IAAN,CAAW,UAAAD,IAAI,EAAI;AAC9B,eAAOA,IAAI,CAACV,KAAL,KAAeA,KAAf,IAAwBU,IAAI,CAACT,QAAL,KAAkBA,QAA1C,IAAsDS,IAA7D;AACD,OAFY,CAAb;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAA,MAAAA,IAAI,GACAH,OAAO,CAACG,IAAD,CADP,GAEAF,MAAM,CAAC,8BAAD,CAFV;AAGD,KARS,EAQP,IARO,CAAV;AASD,GAVM,CAAP;AAWD;;AAED,SAASJ,MAAT,CAAgBU,QAAhB,EAA0Bb,QAA1B,EAAoC;AAClCc,EAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACD;;AAED,SAASX,QAAT,CAAkBS,QAAlB,EAA4Bb,QAA5B,EAAsC,CAAE","sourcesContent":["const users = [\n  {\n    name: \"asma\",\n    email: \"asma@mail.com\",\n    password: \"123456\"\n  }\n];\nexport const userApi = {\n  login,\n  logout,\n  register\n};\n\nfunction login(email, password) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const user = users.find(user => {\n        return user.email === email && user.password === password && user;\n      });\n      console.log(user)\n      user\n        ? resolve(user)\n        : reject(\"incorrect Email or password \");\n    }, 1000);\n  });\n}\n\nfunction logout(username, password) {\n  localStorage.removeItem(\"user\");\n}\n\nfunction register(username, password) {}\n"]},"metadata":{},"sourceType":"module"}