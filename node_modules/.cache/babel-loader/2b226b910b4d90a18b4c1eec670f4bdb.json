{"ast":null,"code":"import { userApi } from \"./api\";\nvar users = [{\n  email: \"asma@mail.com\",\n  password: \"123456\"\n}];\nexport var userService = {\n  login: login,\n  logout: logout,\n  register: register\n};\n\nfunction login(email, password) {\n  return new Promise(function (resolve, reject) {\n    userApi.login(email, password).then(function (user) {\n      localStorage.setItem(\"user\", user);\n      resolve(user);\n    }).then(function (error) {\n      localStorage.setItem(\"user\", {});\n      reject(error);\n    });\n  });\n}\n\nfunction logout(username, password) {\n  localStorage.removeItem(\"user\");\n}\n\nfunction register(username, password) {}","map":{"version":3,"sources":["/home/garonz/workspace/task-tracker/src/utils/services.js"],"names":["userApi","users","email","password","userService","login","logout","register","Promise","resolve","reject","then","user","localStorage","setItem","error","username","removeItem"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,IAAMC,KAAK,GAAG,CACZ;AACEC,EAAAA,KAAK,EAAE,eADT;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CADY,CAAd;AAMA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,KAAK,EAALA,KADyB;AAEzBC,EAAAA,MAAM,EAANA,MAFyB;AAGzBC,EAAAA,QAAQ,EAARA;AAHyB,CAApB;;AAMP,SAASF,KAAT,CAAeH,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,SAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,IAAAA,OAAO,CACJK,KADH,CACSH,KADT,EACgBC,QADhB,EAEGQ,IAFH,CAEQ,UAAAC,IAAI,EAAI;AACZC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,IAA7B;AACAH,MAAAA,OAAO,CAACG,IAAD,CAAP;AACD,KALH,EAMGD,IANH,CAMQ,UAAAI,KAAK,EAAI;AACbF,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,EAA7B;AACAJ,MAAAA,MAAM,CAACK,KAAD,CAAN;AACD,KATH;AAUD,GAXM,CAAP;AAYD;;AAED,SAAST,MAAT,CAAgBU,QAAhB,EAA0Bb,QAA1B,EAAoC;AAClCU,EAAAA,YAAY,CAACI,UAAb,CAAwB,MAAxB;AACD;;AAED,SAASV,QAAT,CAAkBS,QAAlB,EAA4Bb,QAA5B,EAAsC,CAAE","sourcesContent":["import { userApi } from \"./api\";\nconst users = [\n  {\n    email: \"asma@mail.com\",\n    password: \"123456\"\n  }\n];\nexport const userService = {\n  login,\n  logout,\n  register\n};\n\nfunction login(email, password) {\n  return new Promise((resolve, reject) => {\n    userApi\n      .login(email, password)\n      .then(user => {\n        localStorage.setItem(\"user\", user);\n        resolve(user);\n      })\n      .then(error => {\n        localStorage.setItem(\"user\", {});\n        reject(error);\n      });\n  });\n}\n\nfunction logout(username, password) {\n  localStorage.removeItem(\"user\");\n}\n\nfunction register(username, password) {}\n"]},"metadata":{},"sourceType":"module"}