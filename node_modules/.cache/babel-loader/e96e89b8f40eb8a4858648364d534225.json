{"ast":null,"code":"var users = [{\n  name: \"asma\",\n  email: \"asma@mail.com\",\n  password: \"123456\"\n}];\nexport var userApi = {\n  login: login,\n  logout: logout,\n  register: register\n};\n\nfunction login(email, password) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      var user = users.find(function (user) {\n        return user.email === email && user.password === password && user;\n      });\n      user ? resolve(user) : reject(\"incorrect Email or password \");\n    }, 1000);\n  });\n}\n\nfunction logout(username, password) {\n  localStorage.removeItem(\"user\");\n}\n\nfunction register(_ref) {\n  var email = _ref.email,\n      name = _ref.name,\n      password = _ref.password,\n      gender = _ref.gender;\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      var userFound = users.find(function (user) {\n        return user.email === email;\n      });\n\n      if (!userFound) {\n        var newUser = {\n          email: email,\n          password: password,\n          name: name,\n          gender: gender\n        }; // push to array \n\n        users.push(newUser);\n        resolve(newUser);\n      } else {\n        reject(\"user exists\");\n      }\n    }, 1000);\n  });\n}","map":{"version":3,"sources":["/home/garonz/workspace/task-tracker/src/utils/api.js"],"names":["users","name","email","password","userApi","login","logout","register","Promise","resolve","reject","setTimeout","user","find","username","localStorage","removeItem","gender","userFound","newUser","push"],"mappings":"AAAA,IAAMA,KAAK,GAAG,CACV;AACIC,EAAAA,IAAI,EAAE,MADV;AAEIC,EAAAA,KAAK,EAAE,eAFX;AAGIC,EAAAA,QAAQ,EAAE;AAHd,CADU,CAAd;AAOA,OAAO,IAAMC,OAAO,GAAG;AACnBC,EAAAA,KAAK,EAALA,KADmB;AAEnBC,EAAAA,MAAM,EAANA,MAFmB;AAGnBC,EAAAA,QAAQ,EAARA;AAHmB,CAAhB;;AAMP,SAASF,KAAT,CAAeH,KAAf,EAAsBC,QAAtB,EAAgC;AAC5B,SAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,IAAAA,UAAU,CAAC,YAAM;AACb,UAAMC,IAAI,GAAGZ,KAAK,CAACa,IAAN,CAAW,UAAAD,IAAI,EAAI;AAC5B,eAAOA,IAAI,CAACV,KAAL,KAAeA,KAAf,IAAwBU,IAAI,CAACT,QAAL,KAAkBA,QAA1C,IAAsDS,IAA7D;AACH,OAFY,CAAb;AAGAA,MAAAA,IAAI,GACEH,OAAO,CAACG,IAAD,CADT,GAEEF,MAAM,CAAC,8BAAD,CAFZ;AAGH,KAPS,EAOP,IAPO,CAAV;AAQH,GATM,CAAP;AAUH;;AAED,SAASJ,MAAT,CAAgBQ,QAAhB,EAA0BX,QAA1B,EAAoC;AAChCY,EAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACH;;AAED,SAAST,QAAT,OAAmD;AAAA,MAAhCL,KAAgC,QAAhCA,KAAgC;AAAA,MAAzBD,IAAyB,QAAzBA,IAAyB;AAAA,MAAnBE,QAAmB,QAAnBA,QAAmB;AAAA,MAATc,MAAS,QAATA,MAAS;AAC/C,SAAO,IAAIT,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,IAAAA,UAAU,CAAC,YAAM;AACb,UAAMO,SAAS,GAAGlB,KAAK,CAACa,IAAN,CAAW,UAAAD,IAAI,EAAI;AACjC,eAAQA,IAAI,CAACV,KAAL,KAAeA,KAAvB;AACH,OAFiB,CAAlB;;AAGA,UAAG,CAACgB,SAAJ,EAAc;AAEV,YAAMC,OAAO,GAAG;AACZjB,UAAAA,KAAK,EAALA,KADY;AAEZC,UAAAA,QAAQ,EAARA,QAFY;AAGZF,UAAAA,IAAI,EAAJA,IAHY;AAIZgB,UAAAA,MAAM,EAANA;AAJY,SAAhB,CAFU,CAQV;;AACAjB,QAAAA,KAAK,CAACoB,IAAN,CAAWD,OAAX;AACAV,QAAAA,OAAO,CAACU,OAAD,CAAP;AACH,OAXD,MAYI;AACAT,QAAAA,MAAM,CAAC,aAAD,CAAN;AACH;AACJ,KAnBS,EAmBP,IAnBO,CAAV;AAoBH,GArBM,CAAP;AAsBH","sourcesContent":["const users = [\n    {\n        name: \"asma\",\n        email: \"asma@mail.com\",\n        password: \"123456\"\n    }\n];\nexport const userApi = {\n    login,\n    logout,\n    register\n};\n\nfunction login(email, password) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            const user = users.find(user => {\n                return user.email === email && user.password === password && user;\n            });\n            user\n                ? resolve(user)\n                : reject(\"incorrect Email or password \");\n        }, 1000);\n    });\n}\n\nfunction logout(username, password) {\n    localStorage.removeItem(\"user\");\n}\n\nfunction register({email, name, password, gender}) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            const userFound = users.find(user => {\n                return (user.email === email);\n            });\n            if(!userFound){\n\n                const newUser = {\n                    email,\n                    password,\n                    name,\n                    gender\n                };\n                // push to array \n                users.push(newUser);\n                resolve(newUser);\n            }\n            else{\n                reject(\"user exists\");\n            }\n        }, 1000);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}