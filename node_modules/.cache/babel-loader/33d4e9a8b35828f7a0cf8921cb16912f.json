{"ast":null,"code":"var users = [{\n  email: \"asma@mail.com\",\n  password: \"123456\"\n}];\nexport var userApi = {\n  login: login,\n  logout: logout,\n  register: register\n};\n\nfunction login(email, password) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      var user = users.find(function (user) {\n        return user.email === email && user.password === password && user;\n      });\n\n      if (user) {\n        resolve(user);\n      } else {\n        reject(\"User Not Found\");\n      }\n    }, 1000);\n  });\n}\n\nfunction logout(username, password) {\n  localStorage.removeItem(\"user\");\n}\n\nfunction register(username, password) {}","map":{"version":3,"sources":["/home/garonz/workspace/task-tracker/src/utils/api.js"],"names":["users","email","password","userApi","login","logout","register","Promise","resolve","reject","setTimeout","user","find","username","localStorage","removeItem"],"mappings":"AAAA,IAAMA,KAAK,GAAG,CACZ;AACEC,EAAAA,KAAK,EAAE,eADT;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CADY,CAAd;AAMA,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,KAAK,EAALA,KADqB;AAErBC,EAAAA,MAAM,EAANA,MAFqB;AAGrBC,EAAAA,QAAQ,EAARA;AAHqB,CAAhB;;AAMP,SAASF,KAAT,CAAeH,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,SAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,IAAAA,UAAU,CAAC,YAAM;AACf,UAAMC,IAAI,GAAGX,KAAK,CAACY,IAAN,CAAW,UAAAD,IAAI,EAAI;AAC9B,eAASA,IAAI,CAACV,KAAL,KAAeA,KAAf,IAAwBU,IAAI,CAACT,QAAL,KAAkBA,QAA3C,IAAwDS,IAAhE;AACD,OAFY,CAAb;;AAGA,UAAIA,IAAJ,EAAU;AACRH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACD,OAFD,MAEO;AACLF,QAAAA,MAAM,CAAC,gBAAD,CAAN;AACD;AACF,KATS,EASP,IATO,CAAV;AAUD,GAXM,CAAP;AAYD;;AAED,SAASJ,MAAT,CAAgBQ,QAAhB,EAA0BX,QAA1B,EAAoC;AAClCY,EAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACD;;AAED,SAAST,QAAT,CAAkBO,QAAlB,EAA4BX,QAA5B,EAAsC,CAAE","sourcesContent":["const users = [\n  {\n    email: \"asma@mail.com\",\n    password: \"123456\"\n  }\n];\nexport const userApi = {\n  login,\n  logout,\n  register\n};\n\nfunction login(email, password) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const user = users.find(user => {\n        return  (user.email === email && user.password === password) && user;\n      });\n      if (user) {\n        resolve(user);\n      } else {\n        reject(\"User Not Found\");\n      }\n    }, 1000);\n  });\n}\n\nfunction logout(username, password) {\n  localStorage.removeItem(\"user\");\n}\n\nfunction register(username, password) {}\n"]},"metadata":{},"sourceType":"module"}